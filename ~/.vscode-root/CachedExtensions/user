{"input":{"ourVersion":"1.27.2","commit":"f46c4c469d6e6d8c46f268d1553c5dc4b475840f","locale":"en-us","devMode":false,"absoluteFolderPath":"/home/winds/.vscode/extensions","isBuiltin":false,"isUnderDevelopment":false,"tanslations":{},"mtime":1537202888957},"result":[{"name":"vscode-eslint","displayName":"ESLint","description":"Integrates ESLint JavaScript into VS Code.","version":"1.6.0","author":"Microsoft Corporation","license":"MIT","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-eslint.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-eslint/issues"},"publisher":"dbaeumer","icon":"eslint_icon.png","categories":["Programming Languages","Linters"],"keywords":["multi-root ready"],"engines":{"vscode":"^1.26.0"},"activationEvents":["*"],"main":"/home/winds/.vscode/extensions/dbaeumer.vscode-eslint-1.6.0/client/out/extension","contributes":{"configuration":{"type":"object","title":"ESLint","properties":{"eslint.enable":{"scope":"resource","type":"boolean","default":true,"description":"Controls whether eslint is enabled for JavaScript files or not."},"eslint.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn"],"default":"npm","description":"The package manager you use to install node modules."},"eslint.alwaysShowStatus":{"type":"boolean","default":false,"description":"Always show the ESlint status bar item.","scope":"window"},"eslint.nodePath":{"scope":"resource","type":["string","null"],"default":null,"description":"A path added to NODE_PATH when resolving the eslint module."},"eslint._legacyModuleResolve":{"scope":"resource","type":"boolean","default":false,"description":"Uses the legacy module resolving."},"eslint.options":{"scope":"resource","type":"object","default":{},"description":"The eslint options object to provide args normally passed to eslint when executed from a command line (see http://eslint.org/docs/developer-guide/nodejs-api#cliengine)."},"eslint.trace.server":{"scope":"window","anyOf":[{"type":"string","enum":["off","messages","verbose"],"default":"off"},{"type":"object","properties":{"verbosity":{"type":"string","enum":["off","messages","verbose"],"default":"off"},"format":{"type":"string","enum":["text","json"],"default":"text"}}}],"default":"off","description":"Traces the communication between VSCode and the eslint linter service."},"eslint.run":{"scope":"resource","type":"string","enum":["onSave","onType"],"default":"onType","description":"Run the linter on save (onSave) or on type (onType)"},"eslint.autoFixOnSave":{"scope":"resource","type":"boolean","default":false,"description":"Turns auto fix on save on or off."},"eslint.workingDirectories":{"scope":"resource","type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"directory":{"type":"string","description":"The working directory to use if a file's path start with this directory."},"changeProcessCWD":{"type":"boolean","description":"Whether the process's cwd should be changed as well."}}}]}},"eslint.validate":{"scope":"resource","type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"language":{"type":"string","description":"The language id to be validated by ESLint"},"autoFix":{"type":"boolean","description":"Whether auto fixes are provided for the language"}}}]},"default":["javascript","javascriptreact"],"description":"An array of language ids which should be validated by ESLint"},"eslint.provideLintTask":{"scope":"resource","type":"boolean","default":false,"description":"Controls whether a task for linting the whole workspace will be available."},"eslint.runtime":{"scope":"window","type":["string","null"],"default":null,"description":"The location of the node binary to run ESLint under."}}},"commands":[{"title":"Fix all auto-fixable Problems","category":"ESLint","command":"eslint.executeAutofix"},{"title":"Create ESLint configuration","category":"ESLint","command":"eslint.createConfig"},{"title":"Enable ESLint","category":"ESLint","command":"eslint.enable"},{"title":"Disable ESLint","category":"ESLint","command":"eslint.disable"},{"title":"Show Output Channel","category":"ESLint","command":"eslint.showOutputChannel"}],"jsonValidation":[{"fileMatch":".eslintrc","url":"http://json.schemastore.org/eslintrc"},{"fileMatch":".eslintrc.json","url":"http://json.schemastore.org/eslintrc"}],"languages":[{"id":"ignore","filenames":[".eslintignore"]}]},"scripts":{"vscode:prepublish":"cd client && npm run update-vscode && cd .. && npm run compile","compile:client":"tsc -p ./client/tsconfig.json","compile:server":"tsc -p ./server/tsconfig.json","watch:client":"tsc -w -p ./client/tsconfig.json","watch:server":"tsc -w -p ./server/tsconfig.json","compile":"npm run compile:client && npm run compile:server","postinstall":"cd client && npm install && cd ../server && npm install && cd .."},"devDependencies":{"typescript":"^2.9.1","@types/node":"^8.0.0"},"uuid":"583b2b34-2c1e-4634-8c0b-0b82e283ea3a","isBuiltin":false,"isUnderDevelopment":false,"id":"dbaeumer.vscode-eslint","extensionLocation":{"$mid":1,"fsPath":"/home/winds/.vscode/extensions/dbaeumer.vscode-eslint-1.6.0","path":"/home/winds/.vscode/extensions/dbaeumer.vscode-eslint-1.6.0","scheme":"file"}},{"name":"debugger-for-chrome","displayName":"Debugger for Chrome","version":"4.10.1","icon":"images/icon.png","description":"Debug your JavaScript code in the Chrome browser, or any other target that supports the Chrome Debugger protocol.","author":{"name":"Microsoft Corporation"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-chrome-debug"},"publisher":"msjsdiag","bugs":"https://github.com/microsoft/vscode-chrome-debug/issues","engines":{"vscode":"^1.17.0"},"categories":["Debuggers"],"keywords":["multi-root ready"],"license":"SEE LICENSE IN LICENSE.txt","dependencies":{"vscode-chrome-debug-core":"^6.7.13","vscode-debugadapter":"^1.31.0","vscode-nls":"^4.0.0"},"devDependencies":{"@types/mocha":"^2.2.35","@types/mockery":"^1.4.29","@types/node":"^8.0.58","@types/source-map":"^0.1.27","@types/tmp":"0.0.32","concurrently":"^3.1.0","del":"^3.0.0","event-stream":"^3.3.4","glob":"^7.1.1","gulp":"^3.9.1","gulp-sourcemaps":"^2.6.1","gulp-tslint":"^8.1.3","gulp-typescript":"^4.0.1","gulp-util":"^3.0.8","http-server":"^0.10.0","minimist":"^1.2.0","mocha":"^5.2.0","mockery":"^1.7.0","run-sequence":"^2.2.0","tmp":"0.0.31","ts-loader":"^1.0.0","tslint":"^5.7.0","typemoq":"^2.1.0","typescript":"^2.7.2","vsce":"^1.48.0","vscode":"^1.1.17","vscode-chrome-debug-core-testsupport":"^3.20.0","vscode-debugadapter-testsupport":"1.24.0","vscode-debugprotocol":"^1.31.0","vscode-nls-dev":"^3.2.2"},"main":"/home/winds/.vscode/extensions/msjsdiag.debugger-for-chrome-4.10.1/out/src/extension","activationEvents":["onDebugInitialConfigurations","onDebugResolve:chrome","onCommand:extension.chrome-debug.toggleSkippingFile"],"scripts":{"build":"gulp build","watch":"gulp watch","start":"node out/src/chromeDebug.js --server=4712","test":"mocha --exit --timeout 20000 -s 2000 -u tdd --colors \"./out/test/*.test.js\"","intTest":"mocha --exit --timeout 20000 -s 3500 -u tdd --colors --reporter node_modules/vscode-chrome-debug-core-testsupport/out/loggingReporter.js ./out/test/int/*.test.js","lint":"gulp tslint","vscode:prepublish":"gulp verify-no-linked-modules","postinstall":"node ./node_modules/vscode/bin/install","patch":"npm version patch -m '%s'","minor":"npm version minor -m '%s'","major":"npm version major -m '%s'","package":"gulp package"},"contributes":{"breakpoints":[{"language":"javascript"},{"language":"typescriptreact"},{"language":"javascriptreact"},{"language":"fsharp"}],"debuggers":[{"type":"chrome","label":"Chrome","program":"./out/src/chromeDebug.js","runtime":"node","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","languages":["javascript","typescript","javascriptreact","typescriptreact"],"configurationSnippets":[{"label":"Chrome: Launch","description":"Launch Chrome to debug a URL","body":{"type":"chrome","request":"launch","name":"Launch Chrome","url":"http://localhost:8080","webRoot":"^\"${2:\\${workspaceFolder\\}}\""}},{"label":"Chrome: Attach","description":"Attach to an instance of Chrome already in debug mode","body":{"type":"chrome","request":"attach","name":"Attach to Chrome","port":9222,"webRoot":"^\"${2:\\${workspaceFolder\\}}\""}}],"configurationAttributes":{"launch":{"required":[],"properties":{"port":{"type":"number","description":"Port to use for Chrome remote debugging.","default":9222},"address":{"type":"string","description":"TCP/IP address of debug port","default":"127.0.0.1"},"file":{"type":"string","description":"A local html file to open in the browser","default":"${workspaceFolder}/index.html"},"url":{"type":"string","description":"Will search for a tab with this EXACT url and attach to it, if found","default":"http://localhost:8080"},"webRoot":{"type":"string","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","default":"${workspaceFolder}"},"pathMapping":{"type":"object","description":"A mapping of URLs/paths to local folders, to resolve scripts in Chrome to scripts on disk","default":{"/":"${workspaceFolder}"}},"runtimeExecutable":{"type":["string","null"],"description":"Workspace absolute path to the runtime executable to be used. If not specified, Chrome will be used from the default install location.","default":null},"runtimeArgs":{"type":"array","description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"default":[]},"env":{"type":"object","description":"Optional dictionary of environment key/value pairs.","default":{}},"cwd":{"type":"string","description":"Optional working directory for the runtime executable.","default":null},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"diagnosticLogging":{"type":"boolean","description":"When true, the adapter logs its own diagnostic info to the console in a human readable format","default":true,"deprecationMessage":"'diagnosticLogging' is deprecated. Use 'trace' instead."},"verboseDiagnosticLogging":{"type":"boolean","description":"When true, the adapter logs all traffic with the client and target (as well as the info logged by 'diagnosticLogging')","default":true,"deprecationMessage":"'verboseDiagnosticLogging' is deprecated. Use 'trace' instead."},"trace":{"type":["boolean","string"],"enum":["verbose",true],"default":true,"description":"When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console."},"userDataDir":{"type":["string","boolean"],"description":"By default, Chrome is launched with a separate user profile in a temp folder. Use this option to override it. Set to false to launch with your default user profile.","default":true},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.","default":{"webpack:///./*":"${webRoot}/*","webpack:///src/*":"${webRoot}/*","webpack:///*":"*","webpack:///./~/*":"${webRoot}/node_modules/*","meteor://💻app/*":"${webRoot}/*"}},"smartStep":{"type":"boolean","description":"Automatically step through unmapped lines in sourcemapped files. For example, code that TypeScript produces automatically when downcompiling async/await or other features.","default":true},"skipFiles":{"type":"array","description":"An array of file or folder names, or path globs, to skip when debugging.","default":[]},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Chrome. Default is 10000 ms.","default":10000},"disableNetworkCache":{"type":"boolean","description":"Controls whether to skip the network cache for each request","default":true},"urlFilter":{"type":"string","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","default":""},"showAsyncStacks":{"type":"boolean","description":"Show the async calls that led to the current call stack","default":true},"breakOnLoad":{"type":"boolean","description":"Experimental feature -  If true, the debug adapter will attempt to set breakpoints in scripts before they are loaded, so it can hit breakpoints at the beginnings of those scripts. Has a perf impact.","default":true},"breakOnLoadStrategy":{"type":"string","enum":["instrument","regex"],"enumDescriptions":["Tell Chrome to pause as each script is loaded, resolving sourcemaps and setting breakpoints","Sets breakpoints optimistically in files with the same name as the file in which the breakpoint is set."],"description":"The strategy to use for breakOnLoad.","default":"instrument"},"targetTypes":{"type":["array","null"],"description":"An array of acceptable target types. The default is `[\"page\"]`.","default":["page"]}}},"attach":{"required":["port"],"properties":{"port":{"type":"number","description":"Port to use for Chrome remote debugging.","default":9222},"address":{"type":"string","description":"TCP/IP address of debug port","default":"127.0.0.1"},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"diagnosticLogging":{"type":"boolean","description":"When true, the adapter logs its own diagnostic info to the console in a human readable format","default":true,"deprecationMessage":"'diagnosticLogging' is deprecated. Use 'trace' instead."},"verboseDiagnosticLogging":{"type":"boolean","description":"When true, the adapter logs all traffic with the client and target (as well as the info logged by 'diagnosticLogging')","default":true,"deprecationMessage":"'verboseDiagnosticLogging' is deprecated. Use 'trace' instead."},"trace":{"type":["boolean","string"],"enum":["verbose",true],"default":true,"description":"When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console."},"url":{"type":"string","description":"Will search for a tab with this EXACT url and attach to it, if found","default":"http://localhost:8080"},"webRoot":{"type":"string","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","default":"${workspaceFolder}"},"pathMapping":{"type":"object","description":"A mapping of URLs/paths to local folders, to resolve scripts in Chrome to scripts on disk","default":{}},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.","default":{}},"smartStep":{"type":"boolean","description":"Automatically step through unmapped lines in sourcemapped files. For example, code that TypeScript produces automatically when downcompiling async/await or other features.","default":true},"skipFiles":{"type":"array","description":"An array of file or folder names, or path globs, to skip when debugging.","default":[]},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Chrome. Default is 10000 ms.","default":10000},"disableNetworkCache":{"type":"boolean","description":"Controls whether to skip the network cache for each request","default":true},"urlFilter":{"type":"string","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","default":""},"targetTypes":{"type":["array","null"],"description":"An array of acceptable target types. The default is `[\"page\"]`.","default":["page"]},"showAsyncStacks":{"type":"boolean","description":"Show the async calls that led to the current call stack","default":true}}}}}],"menus":{"debug/callstack/context":[{"command":"extension.chrome-debug.toggleSkippingFile","group":"navigation","when":"inDebugMode && debugType == 'chrome'"},{"command":"extension.chrome-debug.toggleSmartStep","group":"navigation","when":"inDebugMode && debugType == 'chrome'"}]},"commands":[{"command":"extension.chrome-debug.toggleSkippingFile","title":"Chrome: Toggle Skipping This File"},{"command":"extension.chrome-debug.toggleSmartStep","title":"Chrome: Toggle Smart Step"}],"keybindings":[{"command":"extension.node-debug.pickLoadedScript","key":"ctrl+f4","mac":"cmd+f4","when":"debugType == 'chrome'"}]},"uuid":"1ec62ca5-d7f9-4ddb-a882-e8d018c0aefd","isBuiltin":false,"isUnderDevelopment":false,"id":"msjsdiag.debugger-for-chrome","extensionLocation":{"$mid":1,"fsPath":"/home/winds/.vscode/extensions/msjsdiag.debugger-for-chrome-4.10.1","path":"/home/winds/.vscode/extensions/msjsdiag.debugger-for-chrome-4.10.1","scheme":"file"}},{"name":"LiveServer","displayName":"Live Server","description":"Launch a development local Server with live reload feature for static & dynamic pages","version":"5.1.1","publisher":"ritwickdey","author":{"name":"Ritwick Dey","email":"ritwickdey@outlook.com","url":"http://twitter.com/Dey_Ritwick"},"engines":{"vscode":"^1.20.0"},"categories":["Other"],"keywords":["html preview","live preview","live reload","svg preview","open in browser","multi-root ready"],"preview":false,"galleryBanner":{"color":"#41205f","theme":"dark"},"activationEvents":["*"],"main":"/home/winds/.vscode/extensions/ritwickdey.liveserver-5.1.1/out/src/extension","contributes":{"commands":[{"command":"extension.liveServer.goOffline","title":"Stop Live Server","category":"Live Server"},{"command":"extension.liveServer.goOnline","title":"Open with Live Server","category":"Live Server"},{"command":"extension.liveServer.changeWorkspace","title":"Change Live Server workspace","category":"Live Server"}],"keybindings":[{"command":"extension.liveServer.goOffline","key":"alt+L alt+C","when":"editorTextFocus","mac":"cmd+L cmd+C"},{"command":"extension.liveServer.goOnline","key":"alt+L alt+O","when":"editorTextFocus","mac":"cmd+L cmd+O"}],"menus":{"editor/context":[{"command":"extension.liveServer.goOnline","group":"myGrp@liveServer","when":"resourceLangId == html"},{"command":"extension.liveServer.goOffline","group":"myGrp@liveServer","when":"resourceLangId == html"},{"command":"extension.liveServer.goOnline","group":"myGrp@liveServer","when":"resourceLangId == xml"}],"explorer/context":[{"command":"extension.liveServer.goOnline","group":"navigation@-LiveServer","when":"resourceLangId == html"},{"command":"extension.liveServer.goOnline","group":"navigation@-LiveServer","when":"resourceLangId == xml"}]},"configuration":{"title":"Live Server Config","properties":{"liveServer.settings.port":{"type":["number"],"default":5500,"minimum":0,"maximum":65535,"description":"Set Custom Port Number of Live Server. Set 0 if you want random port."},"liveServer.settings.root":{"type":["string"],"default":"/","pattern":"/|/[^\\/]","description":"Set Custom root of Live Server. \nTo change root the the server to sub folder of workspace, use '/' and relative path from workspace. \nExample: /subfolder1/subfolder2"},"liveServer.settings.CustomBrowser":{"type":["string","null"],"default":null,"enum":["chrome","chrome:PrivateMode","firefox","firefox:PrivateMode","microsoft-edge","blisk",null],"description":"Specify custom browser settings for Live Server. \nBy Default it will open your default favorite browser."},"liveServer.settings.ChromeDebuggingAttachment":{"type":["boolean"],"default":false,"description":"Enable Chrome Debugging Attachment to Live Server at Debuging Port 9222.\n NOTE: You have to install 'Debugger for Chrome' \nIf the value is true, Select 'Attach to Chrome' from Debug Window to start debugging. \n\n CAUTION: If it is true, 'Launch Chrome against localhost' may not work."},"liveServer.settings.AdvanceCustomBrowserCmdLine":{"type":["string","null"],"default":null,"description":"Note: If it is not Null, It will override CustomBrowser and ChromeDebuggingAttachment settings.\n\n Examples : \nchrome --incognito --headless --remote-debugging-port=9222 \n C:\\\\Program Files\\\\Firefox Developer Edition\\\\firefox.exe --private-window"},"liveServer.settings.showOnStatusbar":{"type":"boolean","default":true,"description":"Change this to false if you don't want the button to show in the statusbar"},"liveServer.settings.NoBrowser":{"type":"boolean","default":false,"description":"If it is true live server will start without browser opened."},"liveServer.settings.ignoreFiles":{"type":"array","default":[".vscode/**","**/*.scss","**/*.sass","**/*.ts"],"description":"To ignore specific file changes"},"liveServer.settings.mount":{"type":"array","items":{"type":"array","minItems":2,"maxItems":2,"items":{"type":"string"}},"default":[],"description":"Mount a directory to a route. Such as [['/components', './node_modules']]"},"liveServer.settings.donotShowInfoMsg":{"type":"boolean","default":false,"description":"To disable information pop up messages."},"liveServer.settings.donotVerifyTags":{"type":"boolean","default":false,"description":"To turn off prompt warning message if body or head or other supporting tag is missing in your HTML."},"liveServer.settings.host":{"type":"string","default":"127.0.0.1","description":"To switch between localhost or 127.0.0.1 or anything else. Default is 127.0.0.1"},"liveServer.settings.useLocalIp":{"type":"boolean","default":false,"description":"Use local IP as host"},"liveServer.settings.proxy":{"type":"object","default":{"enable":false,"baseUri":"/","proxyUri":"http://127.0.0.1:80"},"properties":{"enable":{"type":"boolean","default":false,"description":"Make it true to enable the feature."},"baseUri":{"type":"string","default":"/","pattern":""},"proxyUri":{"type":"string","default":"http://127.0.0.1:80","pattern":"(^http[s]?://)(.[^(\\|\\s)]+)$"}},"required":["enable","baseUri","proxyUri"],"additionalProperties":false,"description":"To Setup Proxy"},"liveServer.settings.useWebExt":{"type":"boolean","default":false,"description":"You have to install a browser extension. That will be works for your dynamic pages (like PHP)."},"liveServer.settings.wait":{"type":"number","default":100,"description":"Delay before live reloading. Value in milliseconds. Default is 100"},"liveServer.settings.fullReload":{"type":"boolean","default":false,"description":"By Default Live Server inject CSS changes without full reloading of browser. You can change this behviour by making this setting as `true`"},"liveServer.settings.https":{"type":"object","default":{"enable":false,"cert":"","key":"","passphrase":""},"properties":{"enable":{"type":"boolean","default":false,"description":"Make it true to enable it."},"cert":{"type":"string","default":"","description":"Add full path certificate."},"key":{"type":"string","default":"","description":"Add full path key"},"passphrase":{"type":"string","default":"","description":"Add Pass Phrase."}},"required":["enable","cert","key","passphrase"],"additionalProperties":false,"description":"Setup https configuration"},"liveServer.settings.file":{"type":"string","default":"","description":"When set, serve this file (server root relative) for every 404 (useful for single-page applications)"},"liveServer.settings.multiRootWorkspaceName":{"type":"string","default":null,"description":"This the entry point of server when you're in multiroot workspace"}}}},"license":"MIT","icon":"images/icon.png","bugs":{"url":"https://github.com/ritwickdey/vscode-live-server/issues","email":"ritwickdey@outlook.com"},"repository":{"type":"git","url":"https://github.com/ritwickdey/vscode-live-server.git"},"homepage":"https://ritwickdey.github.io/vscode-live-server/","scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test","lint":"tslint --project .","precommit":"npm run lint","prepush":"npm run lint && npm test"},"husky":{"hooks":{"pre-commit":"npm run precommit","pre-push":"npm run prepush"}},"devDependencies":{"@types/mocha":"^2.2.48","@types/node":"^9.4.7","husky":"^1.0.0-rc.9","mocha":"^5.0.4","tslint":"^5.9.1","typescript":"^2.7.2","vscode":"^1.1.18"},"dependencies":{"http-shutdown":"^1.2.0","ips":"^2.1.3","live-server":"file:lib\\live-server","opn":"^5.3.0"},"announcement":{"onVersion":"5.0.0","message":"LiveServer 5.0: Live Server loves💘 your multi-root workspace. Yep! It's now supported."},"uuid":"b63c44fd-0457-4696-99e9-dbfdf70d77de","isBuiltin":false,"isUnderDevelopment":false,"id":"ritwickdey.LiveServer","extensionLocation":{"$mid":1,"fsPath":"/home/winds/.vscode/extensions/ritwickdey.liveserver-5.1.1","path":"/home/winds/.vscode/extensions/ritwickdey.liveserver-5.1.1","scheme":"file"}},{"name":"vscode-icons","displayName":"vscode-icons","description":"Icons for Visual Studio Code","version":"7.26.0","publisher":"robertohuertasm","license":"MIT","author":{"email":"roberto.huertas@outlook.com","name":"Roberto Huertas","url":"http://codecoding.com"},"maintainers":[{"email":"jimikar@gmail.com","name":"Jimi (Dimitris) Charalampidis"},{"email":"jenshausdorf@gmail.com","name":"Jens Hausdorf","url":"https://jens-hausdorf.de"}],"repository":{"type":"git","url":"https://github.com/vscode-icons/vscode-icons"},"bugs":{"url":"https://github.com/vscode-icons/vscode-icons/issues","email":"roberto.huertas@outlook.com"},"engines":{"vscode":"^1.8.1","node":">=6.5.0"},"categories":["Themes"],"keywords":["icons","theme","icon-theme","multi-root ready","portable mode ready"],"preview":false,"homepage":"https://github.com/vscode-icons/vscode-icons","icon":"images/logo.png","galleryBanner":{"color":"#ffdd00"},"activationEvents":["*"],"main":"/home/winds/.vscode/extensions/robertohuertasm.vscode-icons-7.26.0/out/src/","contributes":{"iconThemes":[{"id":"vscode-icons","label":"VSCode Icons","path":"out/src/icons.json"}],"commands":[{"command":"vscode-icons.activateIcons","title":"Activate VSCode Icons","category":"Icons"},{"command":"vscode-icons.regenerateIcons","title":"Apply Icons Customization","category":"Icons"},{"command":"vscode-icons.ngPreset","title":"Toggle Angular Preset (Workspace Level)","category":"Icons"},{"command":"vscode-icons.jsPreset","title":"Toggle Official JS Preset (User Level)","category":"Icons"},{"command":"vscode-icons.tsPreset","title":"Toggle Official TS Preset (User Level)","category":"Icons"},{"command":"vscode-icons.jsonPreset","title":"Toggle Official JSON Preset (User Level)","category":"Icons"},{"command":"vscode-icons.hideFoldersPreset","title":"Toggle Folder Icons Visibility (User Level)","category":"Icons"},{"command":"vscode-icons.foldersAllDefaultIconPreset","title":"Toggle Specific Folder Icons (User Level)","category":"Icons"},{"command":"vscode-icons.hideExplorerArrowsPreset","title":"Toggle Explorer Folder Arrows Visibility (User Level)","category":"Icons"},{"command":"vscode-icons.restoreIcons","title":"Restore Default Icon Manifest","category":"Icons"},{"command":"vscode-icons.resetProjectDetectionDefaults","title":"Reset Project Detection Defaults","category":"Icons"}],"configuration":{"title":"vscode-icons configuration","properties":{"vsicons.dontShowNewVersionMessage":{"type":"boolean","default":false,"description":"If set to true, the new version message won't be shown anymore."},"vsicons.dontShowConfigManuallyChangedMessage":{"type":"boolean","default":false,"description":"If set to true, when manually changing the configurations, the 'restart' message won't be shown."},"vsicons.projectDetection.autoReload":{"type":"boolean","default":false,"description":"If set to true, the extension will restart automatically on project detection."},"vsicons.projectDetection.disableDetect":{"type":"boolean","default":false,"description":"If set to true, the extension will disable the project detection."},"vsicons.presets.angular":{"type":"boolean","default":false,"description":"If set to true, the extension will match some of the common Angular patterns."},"vsicons.presets.jsOfficial":{"type":"boolean","default":false,"description":"If set to true, the extension will use the official JS icon."},"vsicons.presets.tsOfficial":{"type":"boolean","default":false,"description":"If set to true, the extension will use the official TS icon."},"vsicons.presets.jsonOfficial":{"type":"boolean","default":false,"description":"If set to true, the extension will use the official JSON icon."},"vsicons.presets.hideFolders":{"type":"boolean","default":false,"description":"If set to true, all folders will be hidden."},"vsicons.presets.foldersAllDefaultIcon":{"type":"boolean","default":false,"description":"If set to true, all folders will have the default folder icon."},"vsicons.presets.hideExplorerArrows":{"type":"boolean","default":false,"description":"If set to true, the extension will hide the folder arrows in the 'Explorer'."},"vsicons.customIconFolderPath":{"type":"string","default":"","description":"The physical path to the parent folder where the custom icons folder resides on your local machine."},"vsicons.associations.files":{"type":"array","default":[],"description":"These custom associations will override the file icon associations defined by default."},"vsicons.associations.folders":{"type":"array","default":[],"description":"These custom associations will override the folder icon associations defined by default."},"vsicons.associations.fileDefault.file":{"type":"object","default":null,"description":"This setting will let you change the default file icon for dark themes."},"vsicons.associations.fileDefault.file_light":{"type":"object","default":null,"description":"This setting will let you change the default file icon for light themes."},"vsicons.associations.folderDefault.folder":{"type":"object","default":null,"description":"This setting will let you change the default folder icon for dark themes."},"vsicons.associations.folderDefault.root_folder":{"type":"object","default":null,"description":"This setting will let you change the default root folder icon for dark themes."},"vsicons.associations.folderDefault.folder_light":{"type":"object","default":null,"description":"This setting will let you change the default folder icon for light themes."},"vsicons.associations.folderDefault.root_folder_light":{"type":"object","default":null,"description":"This setting will let you change the default root folder icon for light themes."}}}},"scripts":{"precommit":"pretty-quick --staged","preinstall":"git submodule update --init --recursive","postinstall":"vscode-install","prebuild":"npm run lint && npm run test","build":"node ./out/src/icon-manifest/build.js","pretest":"rimraf ./.nyc_output ./coverage && npm run compile","test":"nyc -x '' mocha","posttest":"nyc report -r lcov","test:vs":"node ./node_modules/vscode/bin/test","vscode:prepublish":"npm run build","vscode:uninstall":"node ./out/src/uninstall.js","precompile":"rimraf ./out","compile":"tsc","compile:w":"npm run compile -- -w","lint":"tslint -p .","example":"example"},"devDependencies":{"@types/chai":"^4.1.3","@types/lodash":"^4.14.109","@types/mocha":"^5.2.2","@types/mockery":"^1.4.29","@types/node":"7","@types/semver":"^5.5.0","@types/sinon":"^5.0.1","chai":"^4.1.2","examples-generator":"file:submodules/examples-generator","mocha":"^5.2.0","mockery":"^2.1.0","nyc":"^12.0.2","prettier":"^1.14.0","pretty-quick":"^1.6.0","rimraf":"^2.6.2","sinon":"^6.0.0","tslint":"^5.11.0","typescript":"^2.9.1","vscode":"^1.1.18"},"dependencies":{"lodash":"^4.17.10","opn":"^5.3.0","semver":"^5.5.0"},"uuid":"9ccc1dd7-7ec4-4a46-bd4f-7d7b8b9d322a","isBuiltin":false,"isUnderDevelopment":false,"id":"robertohuertasm.vscode-icons","extensionLocation":{"$mid":1,"fsPath":"/home/winds/.vscode/extensions/robertohuertasm.vscode-icons-7.26.0","path":"/home/winds/.vscode/extensions/robertohuertasm.vscode-icons-7.26.0","scheme":"file"}},{"name":"quokka-vscode","displayName":"Quokka.js","description":"Live Scratchpad for JavaScript.","version":"1.0.149","publisher":"WallabyJs","homepage":"http://quokkajs.com","bugs":{"url":"https://github.com/wallabyjs/quokka/issues"},"repository":{},"engines":{"vscode":"^1.10.0"},"keywords":["scraptchpad","playground","JavaScript","TypeScript","REPL"],"categories":["Debuggers","Other"],"activationEvents":["*"],"main":"/home/winds/.vscode/extensions/wallabyjs.quokka-vscode-1.0.149/index","icon":"images/logo.png","galleryBanner":{"color":"#ffffff","theme":"light"},"contributes":{"commands":[{"command":"quokka.createFile","title":"Quokka.js: New File"},{"command":"quokka.createJavaScriptFile","title":"Quokka.js: New JavaScript File"},{"command":"quokka.createTypeScriptFile","title":"Quokka.js: New TypeScript File"},{"command":"quokka.showOutput","title":"Quokka.js: Show Output"},{"command":"quokka.showInstrumentedFile","title":"Quokka.js: Show Instrumented Code"},{"command":"quokka.makeQuokkaFromExistingFile","title":"Quokka.js: Start on Current File"},{"command":"quokka.stopCurrent","title":"Quokka.js: Stop Current"},{"command":"quokka.stopAll","title":"Quokka.js: Stop All"},{"command":"quokka.installMissingPackageToProject","title":"Quokka.js: Install Missing Package into Project"},{"command":"quokka.installMissingPackageToQuokka","title":"Quokka.js: Install Missing Package only for Quokka File"},{"command":"quokka.installQuokkaPlugin","title":"Quokka.js: Install Quokka Plugin"},{"command":"quokka.addImport","title":"Quokka.js: Add Import"},{"command":"quokka.addRequire","title":"Quokka.js: Add Require"},{"command":"quokka.showValue","title":"Quokka.js: Show Value"},{"command":"quokka.goToLineInQuokkaFile","title":"Quokka.js: Focus Active Quokka File"},{"command":"quokka.showLicense","title":"Quokka.js: Manage License Key"},{"command":"quokka.switchToPro","title":"Quokka.js: Switch to 'Pro' Edition"},{"command":"quokka.switchToCommunity","title":"Quokka.js: Switch to 'Community' Edition"},{"command":"quokka.selectWorkspaceFolder","title":"Quokka.js: Select Workspace Folder"}],"menus":{"commandPalette":[{"command":"quokka.installQuokkaPlugin","when":"false"},{"command":"quokka.addImport","when":"false"},{"command":"quokka.addRequire","when":"false"}]},"keybindings":[{"command":"quokka.makeQuokkaFromExistingFile","key":"ctrl+k q","mac":"cmd+k q","when":"!terminalFocus"},{"command":"quokka.createJavaScriptFile","key":"ctrl+k j","mac":"cmd+k j","when":"!terminalFocus"},{"command":"quokka.createTypeScriptFile","key":"ctrl+k t","mac":"cmd+k t","when":"!terminalFocus"},{"command":"quokka.stopCurrent","key":"ctrl+k e","mac":"cmd+k s","when":"!terminalFocus"},{"command":"quokka.showOutput","key":"ctrl+k l","mac":"cmd+k l","when":"!terminalFocus"},{"command":"quokka.showValue","key":"ctrl+k v","mac":"cmd+k v","when":"!terminalFocus"},{"command":"quokka.installMissingPackageToQuokka","key":"ctrl+k i","mac":"cmd+k i","when":"!terminalFocus"}],"languages":[{"id":"wallaby-output","mimetypes":["text/x-code-output"]}],"grammars":[{"language":"wallaby-output","scopeName":"wallaby.output","path":"./quokka-output.tmLanguage"}]},"scripts":{"build":"node ./node_modules/grunt/bin/grunt","pub":"npm run build; vsce publish"},"devDependencies":{"@types/mocha":"^2.2.32","@types/node":"^6.0.40","eslint":"^3.6.0","mocha":"^2.3.3","typescript":"^2.0.3","vsce":"^1.18.0","vscode":"^1.0.0","lodash":"*","grunt":"*","grunt-babel":"5.0.1","grunt-browserify":"*","grunt-bump":"0.0.16","grunt-contrib-clean":"*","grunt-contrib-compress":"^0.12.0","grunt-contrib-copy":"*","grunt-contrib-uglify":"*"},"uuid":"aae0701b-111f-49c1-9000-abd37a442f28","isBuiltin":false,"isUnderDevelopment":false,"id":"WallabyJs.quokka-vscode","extensionLocation":{"$mid":1,"fsPath":"/home/winds/.vscode/extensions/wallabyjs.quokka-vscode-1.0.149","path":"/home/winds/.vscode/extensions/wallabyjs.quokka-vscode-1.0.149","scheme":"file"}}]}